<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:XRD.LibCat.Converters"
    xmlns:mod="clr-namespace:XRD.LibCat.Models"
    xmlns:modAbs="clr-namespace:XRD.LibCat.Models.Abstract"
    xmlns:ctrl="clr-namespace:XRD.LibCat.Controls"
    xmlns:local="clr-namespace:XRD.LibCat">

    <Style TargetType="TextBlock" x:Key="mdl2">
        <Setter Property="FontFamily" Value="Segoe Mdl2 Assets"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="mdl2Icon">
        <Setter Property="FontFamily" Value="Segoe Mdl2 Assets"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style TargetType="Button" x:Key="mdl2Button">
        <Setter Property="FontFamily" Value="Segoe Mdl2 Assets"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource mdl2Icon}"
                               Text="{Binding Path=(ctrl:Mdl2AssetProperty.Mdl2Icon), RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={conv:CharToStringConverter}}"
                               Opacity="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={conv:IsEnabledToOpacityConverter}}"
                               Foreground="{Binding Path=(ctrl:Mdl2AssetProperty.Mdl2Brush), RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                        <ContentPresenter Margin="2,0,0,0" Visibility="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={conv:NullableToVisibilityConverter}}"
                            Content="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="mdl2Toggle">
        <Setter Property="FontFamily" Value="Segoe Mdl2 Assets"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource mdl2Icon}"
                               Text="{Binding Path=(ctrl:Mdl2AssetProperty.Mdl2Icon), RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Converter={conv:CharToStringConverter}}"
                               Opacity="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Converter={conv:IsEnabledToOpacityConverter}}"
                               Foreground="{Binding Path=(ctrl:Mdl2AssetProperty.Mdl2Brush), RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                        <ContentPresenter Margin="2,0,0,0" Visibility="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Converter={conv:NullableToVisibilityConverter}}"
                            Content="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrl:AgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:AgeControl}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Label, RelativeSource={RelativeSource AncestorType={x:Type ctrl:AgeControl}}}" VerticalAlignment="Center"/>
                        <ComboBox SelectedValuePath="Tag" 
                                  SelectedValue="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type ctrl:AgeControl}}, Mode=TwoWay}"
                                  Margin="2" VerticalAlignment="Center">
                            <ComboBoxItem Tag="0">N/A</ComboBoxItem>
                            <ComboBoxItem Tag="2">&lt;3</ComboBoxItem>
                            <ComboBoxItem Tag="3">3</ComboBoxItem>
                            <ComboBoxItem Tag="4">4</ComboBoxItem>
                            <ComboBoxItem Tag="5">5</ComboBoxItem>
                            <ComboBoxItem Tag="6">6</ComboBoxItem>
                            <ComboBoxItem Tag="7">7</ComboBoxItem>
                            <ComboBoxItem Tag="8">8</ComboBoxItem>
                            <ComboBoxItem Tag="9">9</ComboBoxItem>
                            <ComboBoxItem Tag="10">10</ComboBoxItem>
                            <ComboBoxItem Tag="11">11</ComboBoxItem>
                            <ComboBoxItem Tag="12">12</ComboBoxItem>
                            <ComboBoxItem Tag="13">13</ComboBoxItem>
                            <ComboBoxItem Tag="14">14+</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrl:GradeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:GradeControl}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Label, RelativeSource={RelativeSource AncestorType={x:Type ctrl:GradeControl}}}" VerticalAlignment="Center"/>
                        <ComboBox SelectedValue="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type ctrl:GradeControl}}, Mode=TwoWay}" 
                                  ItemsSource="{Binding Source={local:EnumBindingSource {x:Type mod:GradeLevels}}}"
                                  Margin="2" VerticalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrl:AgeRestrictControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:AgeRestrictControl}">
                    <StackPanel Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType={x:Type ctrl:AgeRestrictControl}}}">
                        <ctrl:AgeControl Label="From " Value="{Binding MinAge, RelativeSource={RelativeSource AncestorType={x:Type ctrl:AgeRestrictControl}}, Mode=TwoWay}"/>
                        <ctrl:AgeControl Label=" to " Value="{Binding MaxAge, RelativeSource={RelativeSource AncestorType={x:Type ctrl:AgeRestrictControl}}, Mode=TwoWay}"/>
                        <Button x:Name="PART_btnReset" ToolTip="Reset to default values." 
                                VerticalAlignment="Center" Style="{StaticResource mdl2Button}"
                                ctrl:Mdl2AssetProperty.Mdl2Icon="{x:Static local:Mdl2Assets.Clear}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrl:GradeRestrictControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:GradeRestrictControl}">
                    <StackPanel Orientation="{Binding Orientation,RelativeSource={RelativeSource AncestorType={x:Type ctrl:GradeRestrictControl}}}">
                        <ctrl:GradeControl Label="From " Value="{Binding MinGrade, RelativeSource={RelativeSource AncestorType={x:Type ctrl:GradeRestrictControl}}, Mode=TwoWay}"/>
                        <ctrl:GradeControl Label=" to " Value="{Binding MaxGrade, RelativeSource={RelativeSource AncestorType={x:Type ctrl:GradeRestrictControl}}, Mode=TwoWay}"/>
                        <Button x:Name="PART_btnReset" ToolTip="Reset to default values." 
                                VerticalAlignment="Center" Style="{StaticResource mdl2Button}"
                                ctrl:Mdl2AssetProperty.Mdl2Icon="{x:Static local:Mdl2Assets.Clear}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ctrl:EntityBoundWindow}">
        <Setter Property="WindowStyle" Value="ToolWindow"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:EntityBoundWindow}">
                    <DockPanel Background="{x:Static SystemColors.WindowBrush}">
                        <ToolBar>
                            <Button x:Name="PART_btnSave"
                                    ToolTip="Save any changes."
                                    Style="{StaticResource mdl2Button}"
                                    ctrl:Mdl2AssetProperty.Mdl2Brush="DarkBlue"
                                    ctrl:Mdl2AssetProperty.Mdl2Icon="{x:Static local:Mdl2Assets.Save}"/>
                            <Button Name="PART_btnSaveNew" 
                                    ToolTip="{Binding EntityType, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}, ConverterParameter='Save any changes and create a new {0}', Converter={conv:EntityTypeToToolTipConverter}}"
                                    Style="{StaticResource mdl2Button}"
                                    ctrl:Mdl2AssetProperty.Mdl2Brush="DarkGreen"
                                    ctrl:Mdl2AssetProperty.Mdl2Icon="{x:Static local:Mdl2Assets.SaveCopy}"
                                    Content="Save &amp; New"/>
                            <Button x:Name="PART_btnSaveClose" ToolTip="Save any changes and close the window."
                                    Style="{StaticResource mdl2Button}"
                                    ctrl:Mdl2AssetProperty.Mdl2Brush="Maroon"
                                    ctrl:Mdl2AssetProperty.Mdl2Icon="{x:Static local:Mdl2Assets.SaveLocal}"
                                    Content="Save &amp; Close"/>
                            <Separator/>
                            <Button x:Name="PART_btnReload"
                                    ToolTip="{Binding EntityType, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}, Converter={conv:EntityTypeToToolTipConverter}, ConverterParameter='Discard any changes and reload the {0}.'}"
                                    Style="{StaticResource mdl2Button}"
                                    Content="Reload"
                                    ctrl:Mdl2AssetProperty.Mdl2Icon="{x:Static local:Mdl2Assets.Refresh}"/>
                            <Button x:Name="PART_btnCancel" ToolTip="Discard any changes and close the window."
                                    Style="{StaticResource mdl2Button}"
                                    ctrl:Mdl2AssetProperty.Mdl2Brush="Red"
                                    Content="Cancel"
                                    ctrl:Mdl2AssetProperty.Mdl2Icon="{x:Static local:Mdl2Assets.ChromeClose}"/>
                        </ToolBar>
                        <StatusBar DockPanel.Dock="Bottom" Name="PART_sbar">
                            <StatusBar.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Margin" Value="3,0,6,0"/>
                                </Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Orientation" Value="Horizontal"/>
                                </Style>
                            </StatusBar.Resources>
                            <StatusBarItem
                                ToolTip="{Binding EntityType, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}, Converter={conv:EntityTypeToToolTipConverter}, ConverterParameter='The ID for the {0} (local Primary Key).'}">
                                <StackPanel>
                                    <TextBlock Text="ID:"/>
                                    <TextBox Text="{Binding Id, Mode=OneWay}"/>
                                </StackPanel>
                            </StatusBarItem>
                            <StatusBarItem ToolTip="{Binding EntityTYpe, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}, ConverterParameter='The date/time the {0} was created.', Converter={conv:EntityTypeToToolTipConverter}}">
                                <StackPanel >
                                    <TextBlock Text="Created:"/>
                                    <TextBox Text="{Binding CTime, Mode=OneWay}"/>
                                </StackPanel>
                            </StatusBarItem>
                            <StatusBarItem ToolTip="{Binding EntityType, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}, ConverterParameter='The unique ID for the {0} across domains (globally unique ID)', Converter={conv:EntityTypeToToolTipConverter}}">
                                <StackPanel>
                                    <TextBlock Text="UID:"/>
                                    <TextBox Text="{Binding Uid, Mode=OneWay}" IsReadOnly="True" IsEnabled="True"/>
                                </StackPanel>
                            </StatusBarItem>
                            <StatusBarItem ToolTip="{Binding EntityType, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}, ConverterParameter='The date/time the {0} was last saved.', Converter={conv:EntityTypeToToolTipConverter}}"
                                           Visibility="{Binding EntityType, Converter={conv:EntityTypeToVisibilityConverter}, ConverterParameter={x:Type modAbs:ModifiableEntity}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}}">
                                <StackPanel>
                                    <TextBlock Text="Saved:"/>
                                    <TextBox Text="{Binding Ts, Mode=OneWay}"/>
                                </StackPanel>
                            </StatusBarItem>
                            <StatusBarItem ToolTip="{Binding EntityType, Converter={conv:EntityTypeToToolTipConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}, ConverterParameter='The total number of times the {0} has been edited.'}"
                                           Visibility="{Binding EntityType, Converter={conv:EntityTypeToVisibilityConverter}, ConverterParameter={x:Type modAbs:ModifiableEntity}}">
                                <StackPanel>
                                    <TextBlock Text="# Edits:"/>
                                    <TextBox Text="{Binding Ec, Mode=OneWay}"/>
                                </StackPanel>
                            </StatusBarItem>
                            <StatusBarItem>
                                <ProgressBar Name="PART_prgBar" IsIndeterminate="True" Visibility="{Binding IsAccessingDb, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}}" ToolTip="Performing Data Access"/>
                            </StatusBarItem>
                            <StatusBarItem x:Name="PART_sbIsDeleted" HorizontalAlignment="Right" Margin="0,0,20,0"
                                           Visibility="{Binding EntityType, RelativeSource={RelativeSource AncestorType={x:Type ctrl:EntityBoundWindow}}, Converter={conv:EntityTypeToVisibilityConverter}, ConverterParameter={x:Type mod:ISoftDeleted}}">
                                <ToggleButton x:Name="tglIsDeleted" IsChecked="{Binding IsDeleted}" ToolTip="{Binding IsDeleted, Converter={conv:IsDeletedToolTipConverter}}">
                                    <Grid>
                                        <TextBlock Style="{StaticResource mdl2}" Text="&#xe74d;" Foreground="{Binding IsDeleted, Converter={conv:IsDeletedToButtonForegroundConverter} , ConverterParameter={x:Static Brushes.Green}}"/>
                                        <TextBlock Style="{StaticResource mdl2}" Text="&#xf140;" Visibility="{Binding IsDeleted, Converter={conv:BoolToVisibilityConverter}}"/>
                                    </Grid>
                                </ToggleButton>
                            </StatusBarItem>
                        </StatusBar>
                        <ContentPresenter x:Name="PART_content"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
